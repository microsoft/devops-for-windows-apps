name:  Wpf Continuous Integration

# Trigger on push and pull_request
on: [push, pull_request]

jobs:

  build:

    strategy:
      matrix:
        targetplatform: [x86, x64]

    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Install .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.100

    # Add  MsBuild to the PATH: https://github.com/topics/msbuild-action
    - name: Setup MSBuild.exe
      uses: warrenbuckley/Setup-MSBuild@v1

    # Build the Wpf Net Core application
    - name: Build MyWpfApp
      run: msbuild MyWpfApp\MyWpfApp.csproj /restore /p:RuntimeIdentifier=$env:RuntimeIdentifier /p:Platform=$env:TargetPlatform /p:Configuration=$env:Configuration
      env:
        Configuration: Release
        RuntimeIdentifier: win-${{ matrix.targetplatform }}
        TargetPlatform: ${{ matrix.targetplatform }}

    # Test
    - name: Execute Unit Tests
      run: dotnet test MyWpfApp.Tests\MyWpfApp.Tests.csproj

    # Build the Windows Application Packaging project
    - name: Build MyWpfApp.Package 
      run: msbuild MyWpfApp.Package\MyWpfApp.Package.wapproj /p:Platform=$env:TargetPlatform /p:Configuration=$env:Configuration /p:UapAppxPackageBuildMode=$env:BuildMode /p:PackageCertificatePassword=${{secrets.Pfx_Key}}
      env:  
        BuildMode: SideLoadOnly
        Configuration: Release
        TargetPlatform: ${{ matrix.targetplatform }}

    # Upload the MSIX package: https://github.com/marketplace/actions/upload-artifact
    - name: Upload build artifacts
      uses: actions/upload-artifact@master
      with:
        name: MSIX Package
        path: MyWpfApp.Package\AppPackages\